# Copyright (C) 2022 Intel Corporation
# SPDX-License-Identifier: MIT License

# CUDA version from nvidia docker: https://hub.docker.com/r/nvidia/cuda/tags
ARG CUDA_VERSION=11.3.0-cudnn8-runtime-ubuntu20.04
FROM nvidia/cuda:$CUDA_VERSION

RUN rm /etc/apt/sources.list.d/cuda.list
RUN rm /etc/apt/sources.list.d/nvidia-ml.list

ENV LANG=C.UTF-8 LC_ALL=C.UTF-8
# Avoids some interactive prompts during apt-get install
ARG DEBIAN_FRONTEND=noninteractive 

# clean up and refresh apt-get index
RUN apt-get update && \
    apt-get autoremove -y && \
    apt-get clean && rm -rf /var/cache/apt/archives /var/lib/apt/lists/*


# Install system tools
RUN apt-get update --fix-missing && \
    apt-get install -yq --no-install-recommends \
    sudo \
    curl \
    wget \
    build-essential \
    git \
    unzip \
    tmux \
    screen \
    openssh-client && \
    apt-get clean && rm -rf /var/cache/apt/archives /var/lib/apt/lists/*



# install system tools - round 2
RUN apt-get update --fix-missing && \
    apt-get install -yq --no-install-recommends \
    apt-utils \
    python3-pip \
    python3-dev \
    virtualenv && \
    apt-get clean && rm -rf /var/cache/apt/archives /var/lib/apt/lists/*


# Create py3 virtualenv in order to use python3 for the project
RUN virtualenv -p python3 /venv
ENV PATH=/venv/bin:$PATH
RUN pip install --upgrade pip
RUN pip install -q \
    ipdb \
    pandas \
    matplotlib \
    scikit-learn

COPY requirements_clean.txt .
RUN pip install -r requirements_clean.txt


RUN apt-get update \
    && apt-get install -y wget tmux vim libxrender-dev libsm6 libxext6 && \
    apt-get clean && rm -rf /var/cache/apt/archives /var/lib/apt/lists/*




