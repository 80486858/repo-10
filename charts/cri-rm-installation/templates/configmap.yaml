apiVersion: v1
kind: ConfigMap
metadata:
  name: cri-rm-installation-script
  namespace: kube-system
  annotations:
    resources.gardener.cloud/ignore: "true"
data:
  install-cri-rm.sh: |-
    #!/bin/bash
    cp -r /cri-rm-installation/opt/ /var/host/
    cp -r /cri-rm-installation/etc/ /var/host/
    cp /var/host/etc/cri-resmgr/fallback.cfg.sample /var/host/etc/cri-resmgr/fallback.cfg
    chroot /var/host bash -c "systemctl enable cri-resource-manager"
    chroot /var/host bash -c "systemctl restart cri-resource-manager"
    sed -i  '/containerd/d' /var/host/etc/systemd/system/kubelet.service
    if ! grep -q container-runtime-endpoint  "/var/host/etc/systemd/system/kubelet.service"; then
      sed '/KUBELET_EXTRA_ARGS/ s!$! \\\n    --container-runtime-endpoint=/var/run/cri-resmgr/cri-resmgr.sock\\!' -i /var/host/etc/systemd/system/kubelet.service
    fi
    # Check if cri-resource-manager, containerd and kubelet is active
    while true; do
        criIsActive=$(chroot /var/host bash -c "systemctl is-active cri-resource-manager")
        containerdIsActive=$(chroot /var/host bash -c "systemctl is-active containerd")
        kubeletIsActive=$(chroot /var/host bash -c "systemctl is-active kubelet")
        if [ "$criIsActive" == "active" ] && [ "$containerdIsActive" == "active" ] && [ "$kubeletIsActive" == "active" ];then
            break
        fi
    done
    # Restart kubelet
    chroot /var/host bash -c "systemctl daemon-reload"
    chroot /var/host bash -c "systemctl restart kubelet"
    # Sleep after comlpeting the task
    echo "cri-resource-manager installed. Sleeping..."
    while true; do
      sleep 3600;
      echo "Still sleeping...";
    done
