apiVersion: v1
kind: ConfigMap
metadata:
  name: cri-rm-init
  namespace: kube-system
  annotations:
    resources.gardener.cloud/ignore: "true"
data:
  config.toml: |-
        # explicitly use v2 config format
        version = 2

        [proxy_plugins]
        # fuse-overlayfs is used for rootless
        [proxy_plugins."fuse-overlayfs"]
          type = "snapshot"
          address = "/run/containerd-fuse-overlayfs.sock"

        [plugins."io.containerd.grpc.v1.cri".containerd]
          # save disk space when using a single snapshotter
          discard_unpacked_layers = true
          # explicitly use default snapshotter so we can sed it in entrypoint
          snapshotter = "overlayfs"
          # explicit default here, as we're configuring it below
          default_runtime_name = "runc"
        [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
          # set default runtime handler to v2, which has a per-pod shim
          runtime_type = "io.containerd.runc.v2"

        # Setup a runtime with the magic name ("test-handler") used for Kubernetes
        # runtime class tests ...
        [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.test-handler]
          runtime_type = "io.containerd.runc.v2"

        [plugins."io.containerd.grpc.v1.cri"]
          # use fixed sandbox image
          sandbox_image = "gcr.io/google_containers/pause-amd64:3.1"
          # allow hugepages controller to be missing
          # see https://github.com/containerd/cri/pull/1501
          tolerate_missing_hugepages_controller = true
          # restrict_oom_score_adj needs to be true when running inside UserNS (rootless)
            restrict_oom_score_adj = false
        [plugins."io.containerd.grpc.v1.cri".registry]
              [plugins."io.containerd.grpc.v1.cri".registry.mirrors]
                [plugins."io.containerd.grpc.v1.cri".registry.mirrors."docker.io"]
                  endpoint = ["https://registry-1.docker.io"]
                [plugins."io.containerd.grpc.v1.cri".registry.mirrors."100.64.176.37:5000"]
                  endpoint = ["http://100.64.176.37:5000"]