---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes/autoscaler/pull/5848
    controller-gen.kubebuilder.io/version: v0.13.0
  name: provisioningrequests.provisioning.k8s.io
spec:
  group: provisioning.k8s.io
  names:
    kind: ProvisioningRequest
    listKind: ProvisioningRequestList
    plural: provisioningrequests
    shortNames:
    - provreq
    - provreqs
    singular: provisioningrequest
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: ProvisioningRequest is a way to express additional capacity that
          we would like to provision in the cluster. Cluster Autoscaler can use this
          information in its calculations and signal if the capacity is available
          in the cluster or actively add capacity if needed.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: 'Spec contains specification of the ProvisioningRequest object.
              More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status.'
            properties:
              additionalParameters:
                additionalProperties:
                  type: string
                description: AdditionalParameters contains all other parameters custom
                  classes may require.
                type: object
                x-kubernetes-validations:
                - message: Value is immutable
                  rule: self == oldSelf
              podSets:
                description: PodSets lists groups of pods for which we would like
                  to provision resources.
                items:
                  description: PodSet represents one group of pods for Provisioning
                    Request to provision capacity.
                  properties:
                    count:
                      description: Count contains the number of pods that will be
                        created with a given template.
                      format: int32
                      maximum: 16384
                      minimum: 1
                      type: integer
                    podTemplateRef:
                      description: PodTemplateRef is a reference to a PodTemplate
                        object that is representing pods that will consume this reservation
                        (must be within the same namespace). Users need to make sure
                        that the  fields relevant to scheduler (e.g. node selector
                        tolerations) are consistent between this template and actual
                        pods consuming the Provisioning Request.
                      properties:
                        name:
                          description: 'Name of the referenced object. More info:
                            https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names'
                          type: string
                      type: object
                  required:
                  - count
                  - podTemplateRef
                  type: object
                maxItems: 32
                minItems: 1
                type: array
                x-kubernetes-validations:
                - message: Value is immutable
                  rule: self == oldSelf
              provisioningClass:
                description: 'ProvisioningClass describes the different modes of provisioning
                  the resources. Supported values: * check-capacity.kubernetes.io
                  - check if current cluster state can fullfil this request, do not
                  reserve the capacity. * atomic-scale-up.kubernetes.io - provision
                  the resources in an atomic manner * ... - potential other classes
                  that are specific to the cloud providers'
                type: string
                x-kubernetes-validations:
                - message: Value is immutable
                  rule: self == oldSelf
            required:
            - podSets
            - provisioningClass
            type: object
          status:
            description: Status of the ProvisioningRequest. CA constantly reconciles
              this field.
            properties:
              additionalStatus:
                additionalProperties:
                  type: string
                description: AdditionalStatus contains all other status values custom
                  provisioning classes may require.
                minProperties: 64
                type: object
              conditions:
                description: Conditions represent the observations of a Provisioning
                  Request's current state. Those will contain information whether
                  the capacity was found/created or if there were any issues. The
                  condition types may differ between different provisioning classes.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
